// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model client {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  username String
  email    String  @unique
  password String
  role     String?
  order    order[]
}

model category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  item      String?
  type      String
  recipe    recipe[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model recipe {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  item        String?
  title       String
  type        String
  description String
  quantity    Int       @default(1)
  total       Int       @default(0)
  price       String    @default("0.00")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  cartegory   category? @relation(fields: [cartegoryId], references: [id])
  cartegoryId String    @db.ObjectId
}

model order {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  subTotal    String    @default("0.00")
  deliveryFee String    @default("0.00")
  recipe      Json
  delivery    delivery?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  client      client?   @relation(fields: [clientId], references: [id])
  clientId    String?   @db.ObjectId
}


model delivery {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  firstname   String
  lastname    String
  email       String
  street_name String
  city        String
  state       String
  zipcode     Int
  country     String
  phonenumber String
  order       order?   @relation(fields: [orderId], references: [id])
  orderId     String   @unique @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
